description: |
  Packs the orb source into a single "orb.yml" otherwise into "output-filename" if specified  file and validates for orb config errors.
  For self-hosted CircleCI servers, please ensure you set the `circleci-api-host` job parameter and CIRCLE_TOKEN environment variable.

parameters:
  resource_class:
    description: Configure the executor resource class
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: "medium"
  source-dir:
    description: Path to the orb source. Path must be absolute or relative to the working directory.
    type: string
    default: ./src/
  output-dir:
    description: The orb output directory. The orb will be named "orb.yml" or as specified with the "output-filename" parameter in this directory and persisted to the workspace. Path must be absolute or relative to the working directory.
    type: string
    default: ./dist/
  output-filename:
    description: The orb output filename.
    type: string
    default: orb.yml
  circleci-api-host:
    description: Host URL of CircleCI API. If you are using self-hosted CircleCI, this value should be set.
    type: string
    default: https://circleci.com
  tag:
    type: string
    default: "latest"
    description: >
      What version of the CircleCI CLI Docker image? For full list, see
      https://hub.docker.com/r/circleci/circleci-cli/tags

executor:
  name: default
  resource_class: << parameters.resource_class >>
  tag: << parameters.tag >>

steps:
  - checkout
  - run:
      name: Packing orb source
      environment:
        ORB_PARAM_SOURCE_DIR: << parameters.source-dir >>
        ORB_PARAM_OUTPUT_DIR: << parameters.output-dir >>
        ORB_PARAM_OUTPUT_FILENAME: <<parameters.output-filename>>
      command: <<include(scripts/pack.sh)>>
  - run:
      name: Validating orb
      environment:
        ORB_PARAM_OUTPUT_DIR: << parameters.output-dir >>
        ORB_PARAM_OUTPUT_FILENAME: <<parameters.output-filename>>
        CIRCLECI_API_HOST: <<parameters.circleci-api-host>>
      command: <<include(scripts/validate.sh)>>
  - persist_to_workspace:
      paths:
        - <<parameters.output-filename>>
      root: <<parameters.output-dir>>
