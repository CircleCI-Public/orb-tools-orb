description: |
  Publish a new version of your orb.
  This job will produce a development version of an orb by default or will produce a new production version if the $CIRCLE_TAG environment variable is set, and the "pub_type" parameter is set to "production".

parameters:
  orb_name:
    type: string
    description: >
      The version-less orb slug, e.g. "circleci/orb-tools"
  orb_dir:
    description: Directory containing packed orb source. Path must be absolute or relative to the working directory. Should match the "output_dir" of the "pack" job.
    type: string
    default: ./dist/
  orb_file_name:
    description: The orb output file name. The orb will be named this value in the output directory. Should match the "orb_file_name" of the "pack" job.
    type: string
    default: orb.yml
  tag_pattern:
    description: |
      A Regular Expression to compare against `$CIRCLE_TAG` when publishing a production version of an orb.
      Your tag must include a full semantic version number, which will be used to automatically version the published orb.
      Ensure you CircleCI config is also properly configured to trigger for this tag pattern.
      It is recommended to prefix or suffix around this pattern: '[0-9]+\.[0-9]+\.[0-9]+'.
    default: '^v[0-9]+\.[0-9]+\.[0-9]+$'
    type: string
  dev_tags:
    description: |
      A comma separated list of development version tags to create.
      These tags are created by default, unless a production version is being published.
    type: string
    default: "dev:${CIRCLE_SHA1},dev:alpha"
  circleci_token:
    description: |
      Enter the name of the environment variable containing your CircleCI API Token.
      This token must have production publishing scope (organization owner).
      Never directly enter the value of any secret tokens in your config.
    type: env_var_name
    default: CIRCLE_TOKEN
  vcs_type:
    description: The VCS type. Required to be passed in as a parameter for compatibility. Should be configured automatically by the Orb Development Kit.
    type: enum
    enum:
      - gh
      - github
      - bb
      - bitbucket
  github_token:
    description: |
      For GitHub users with "enable_pr_comment" enabled, the GitHub API token must be set.
      Use this parameter in the event you need to set a custom environment variable name other than the default.
    type: env_var_name
    default: GITHUB_TOKEN
  enable_pr_comment:
    description: |
      If true, a comment will be added to the PR when the orb is published for both development and production orbs.
      For GitHub users, a $GITHUB_TOKEN environment variable must be set.
    type: boolean
    default: true
  circleci_api_host:
    description: Host URL of CircleCI API. If you are using CircleCI server, this value should be set.
    type: string
    default: https://circleci.com
  pr_comment_graphql_url:
    description: |
      The url used for GitHub graphql queries when adding comments to pull requests.
    type: string
    default: https://api.github.com/graphql?=
  pub_type:
    description: |
      Select the publishing type. Available options are "dev" and "production".
      If "production" is selected, the orb will be published to the orb registry only if the $CIRCLE_TAG environment variable is set. Publishing will be skipped otherwise.
      If "dev" is selected, two tags will be created: "dev:alpha" and "dev:<SHA1>".
    type: enum
    enum:
      - dev
      - production
    default: "dev"
  checkout:
    type: boolean
    default: true
    description: |
      If you do not wish to checkout the source code, you may disable this behavior. Replace the checkout and add your own command or steps via the 'pre-steps' parameter in your workflow.
  executor:
    description: The executor to use for this job. By default, this will use the "default" executor provided by this orb.
    type: executor
    default: default
  attach_workspace:
    type: boolean
    default: true
    description: |
      If you do not wish to attach the workspace, you may disable this behavior and add your own command or steps via the 'pre-steps' parameter in your workflow.
      This will attempt to attach the workspace at the path specified by the "orb_dir" parameter.
      It is expected that the workspace will contain 'orb_source.tar.gz' which should contain one or more orb source files.
      The tar file will be extracted to the "orb_dir" path.

executor: << parameters.executor >>

steps:
  - when:
      condition: <<parameters.attach_workspace>>
      steps:
        - attach_workspace:
            at: <<parameters.orb_dir>>
        - run:
            name: Prep Workspace
            environment:
              ORB_VAL_ORB_DIR: << parameters.orb_dir >>
              ORB_VAL_UNTAR: true
            command: <<include(scripts/workspace-prep.sh)>>

  - run:
      name: Publishing Orb Release
      environment:
        ORB_PARAM_ORB_PUB_TOKEN: <<parameters.circleci_token>>
        ORB_PARAM_ORB_NAME: <<parameters.orb_name>>
        ORB_PARAM_ORB_DIR: <<parameters.orb_dir>>
        ORB_PARAM_ORB_FILE_NAME: <<parameters.orb_file_name>>
        ORB_PARAM_PUB_TYPE: <<parameters.pub_type>>
        ORB_PARAM_TAG_PATTERN: <<parameters.tag_pattern>>
        ORB_PARAM_DEV_TAGS: <<parameters.dev_tags>>
        PARAM_GH_TOKEN: <<parameters.github_token>>
        CIRCLECI_API_HOST: <<parameters.circleci_api_host>>
      command: <<include(scripts/publish.sh)>>
  - when:
      condition: <<parameters.enable_pr_comment>>
      steps:
        - run:
            name: Adding Comment To PR
            environment:
              ORB_PARAM_GITHUB_TOKEN: <<parameters.github_token>>
              ORB_PARAM_ORB_NAME: <<parameters.orb_name>>
              ORB_PARAM_ORB_PUB_TOKEN: <<parameters.circleci_token>>
              ORB_PARAM_GH_GRAPHQL_URL: <<parameters.pr_comment_graphql_url>>
              PIPELINE_VCS_TYPE: <<parameters.vcs_type>>
            command: <<include(scripts/comment-pr.sh)>>
