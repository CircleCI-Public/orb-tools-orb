description: >
  Promote a dev version of an orb to a semantic production release.
  Designed to run at the conclusion of an integration-testing workflow.

executor: cli/default

parameters:
  release:
    type: enum
    default: patch
    enum: [patch, minor, major]
    description: >
      What type of release to publish (patch, minor, major)?

  publish-token-variable:
    type: env_var_name
    default: CIRCLE_TOKEN
    description: >
      Name of environment variable containing your CircleCI API token

  orb-name:
    type: string
    description: >
      Semver-less name of an orb, e.g. circleci/orb-tools

  orb-ref:
    type: string
    default: dev:${CIRCLE_SHA1:0:7}
    description: >
      Dev:reference to promote to a production release, defaults to
      'dev:${CIRCLE_SHA1:0:7}' (evaluates to the first 7
      characters of the job's commit hash)

  publish-version-tag:
    type: boolean
    default: true
    description: >
      Push a git tag describing the release that was just published? If `true`,
      make sure to pass SSH fingerprints, as well

  cleanup-tags-pattern:
    type: string
    default: "master*"
    description: >
      After publishing a version tag for a successful orb deployment, optionally clean up all older tags that meet a given `git tag -l` wildcard pattern. Defaults to a wildcard pattern including any tags starting with the string `master`.

  ssh-fingerprints:
    type: string
    default: ""
    description: >
      Fingerprints for SSH deploy key (add the public key as a read/write
      key on GitHub; add the private key in CircleCI via SSH Permissions,
      with github.com as Hostname). Used to push a git tag back to the
      project's repository.

steps:
  - when:
      condition: <<parameters.publish-version-tag>>
      steps:
        - checkout

  - run:
      name: promote dev orb to production/semantic release
      command: |
        circleci orb publish promote \
          <<parameters.orb-name>>@<<parameters.orb-ref>> \
          <<parameters.release>> --token \
          $<<parameters.publish-token-variable>>

        echo "View this orb release in the orb registry:"
        echo "https://circleci.com/orbs/registry/orb/<<parameters.orb-name>>"

  - when:
      condition: <<parameters.publish-version-tag>>
      steps:
        - add_ssh_keys:
            fingerprints:
              - <<parameters.ssh-fingerprints>>

        - configure-git

        - run:
            name: construct/push git integration tag
            command: |

              # construct/push new tag
              NEW_VERSION=$(circleci orb info <<parameters.orb-name>> | grep Latest | sed -E 's|Latest: <<parameters.orb-name>>@||')

              TAG="v$NEW_VERSION"

              git tag -a "$TAG" \
                -m "<<parameters.release>>" \
                -m "View this orb release in the orb registry:" \
                -m "https://circleci.com/orbs/registry/orb/<<parameters.orb-name>>?version=$NEW_VERSION" \
                -m "View this orb release using the CircleCI CLI:" \
                -m "\`circleci orb source <<parameters.orb-name>>@$NEW_VERSION\`"

              git push origin "$TAG"

              # delete local tags
              git tag -d $(git tag -l "<<parameters.cleanup-tags-pattern>>")

              # fetch remote tags
              git fetch

              # delete remote tag
              git push origin --delete $(git tag -l git tag -l "<<parameters.cleanup-tags-pattern>>") || true
