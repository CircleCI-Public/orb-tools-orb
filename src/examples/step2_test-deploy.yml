description: |
  After linting and shellchecking the orb is injected into this config dynamically by the "continue" job and triggered.
  The orb is purposefully not imported here, though it is referenced in the config, it will be dynamically injected.
  With the orb loaded, we can run "integration tests" by executing our orbs commands and jobs and validating their output.
  Finally, if the commit has been tagged (ex v1.0.0), we can publish the orb to a production version.
  For advanced usage, see the full docs linked in the "Homepage" url above.
usage:
  version: 2.1
  orbs:
    orb-tools: circleci/orb-tools@12.0
    # The orb will be injected here by the "continue" job.
  jobs:
    # Create a job to test the commands of your orbs.
    # You may want to add additional validation steps to ensure the commands are working as expected.
    command-tests:
      docker:
        - image: cimg/base:current
      steps:
        - checkout
        # Run your orb's commands to validate them.
        - <my-orb>/my_command
        - <my-orb>/my_command_2
  workflows:
    test-deploy:
      jobs:
        # Test your orb's commands
        - command-tests:
            filters:
              tags:
                only: /.*/
        # If your orb has jobs, they can also be tested prior to publishing.
        - <my-orb>/my-job:
            filters:
              tags:
                only: /.*/
        # Because our publishing job has a tag filter, we must also apply a filter to each job it depends on.
        - orb-tools/publish:
            orb-name: <namespace>/<my-orb>
            pub-type: production
            vcs-type: <<pipeline.project.type>>
            requires:
              - command-tests
              - <my-orb>/my_job
            context: [orb-publishing-context]
            filters:
              tags:
                only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
              branches:
                ignore: /.*/
