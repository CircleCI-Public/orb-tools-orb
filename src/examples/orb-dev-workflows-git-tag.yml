description: >
  Use the lint, pack, publish-dev, and trigger-integration-tests-workflow jobs
  to lint a destructured orb's YAML source code, pack it into a single
  orb.yml file, release a @dev:${CIRCLE_SHA1:0:7} version of the orb, and trigger
  an integration testing workflow that will run against the new dev
  release of the orb. After the integration tests succeed, trigger the orb's
  dev-promote-prod-from-git-tag job to promote the orb's @dev:${CIRCLE_SHA1:0:7} release to a
  production release. See the orb's GitHub README for a version of this
  example with extensive usage and context comments:
  https://github.com/circleci-public/orb-tools-orb#examples

usage:
  version: 2.1

  orb_prep_jobs: &orb_prep_jobs
    [
      orb-tools/lint,
      orb-tools/pack
    ]

  orb_promotion_filters: &orb_promotion_filters
    branches:
      ignore: /.*/
    tags:
      only: /^(major|minor|patch)-release-v\d+\.\d+\.\d+$/

  orbs:
    orb-tools: circleci/orb-tools@10
    # add your orb below, to be used in integration tests (note: a
    # @dev:alpha release must exist; if none exists, you'll need to
    # publish manually once before this worklow can succeed)
    your-orb: your-namespace/your-orb@<<pipeline.parameters.dev-orb-version>>

  # Pipeline parameters
  parameters:
    # These pipeline parameters are required by the "trigger-integration-tests-workflow"
    # job, by default.
    run-integration-tests:
      type: boolean
      default: false
    dev-orb-version:
      type: string
      default: "dev:alpha"

  jobs:
    integration-tests-for-your-orb:
      executor: orb-tools/ubuntu
      steps:
        - checkout
      # Test your orb e.g.
      # - your-orb/your-orb-command

  workflows:
    test-pack:
      unless: << pipeline.parameters.run-integration-tests >>
      jobs:
        # This `lint-pack_validate_publish-dev` workflow will run on any commit
        # Lint your YAML
        - orb-tools/lint
        # Pack the orb into a single file and validate the result.
        - orb-tools/pack
        # release dev version of orb, for testing & possible publishing.
        # orb will be published as dev:alpha and dev:${CIRCLE_SHA1:0:7}.
        # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
        # https://circleci.com/docs/2.0/managing-api-tokens
        # store CIRCLE_TOKEN as a project env var or Contexts resource
        # if using Contexts, add your context below
        - orb-tools/publish-dev:
            orb-name: your-namespace/your-orb-name
            requires: *orb_prep_jobs

        # trigger an integration workflow to test the
        # dev:${CIRCLE_SHA1:0:7} version of your orb
        - orb-tools/trigger-integration-tests-workflow:
            name: trigger-integration-dev
            requires:
              - orb-tools/publish-dev

    # This `integration-tests` workflow will only run
    # when the run-integration-tests pipeline parameter is set to true.
    # It is meant to be triggered by the "trigger-integration-tests-workflow"
    # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
    integration-tests:
      when: << pipeline.parameters.run-integration-tests >>
      jobs:
        # your integration test jobs go here: essentially, run all your orb's
        # jobs and commands to ensure they behave as expected. or, run other
        # integration tests of your choosing

        # an example job
        - integration-tests-for-your-orb

    # Tag-triggered workflow to promote a dev orb into production.
    # The tag is expected to have been applied outside of
    # workflows configured here, e.g. by running git tag patch-release-v0.0.1
    # and then git push origin patch-release-v0.0.1
    tag-triggered-orb-publishing:
      unless: << pipeline.parameters.run-integration-tests >>
      jobs:
        # To approve the job, visit the Workflows page for your project
        - hold-for-approval:
            type: approval
            filters: *orb_promotion_filters
        - orb-tools/dev-promote-prod-from-git-tag:
            orb-name: your-namespace/your-orb-name
            add-pr-comment: true
            bot-user: your-bot-username
            bot-token-variable: YOUR_BOT_TOKEN
            requires:
              - hold-for-approval
            filters: *orb_promotion_filters
