description: >
  Trigger an integration-testing workflow for a just-published
  alpha version of an orb using CircleCI v2 API.
  See examples for further usage details.

parameters:
  checkout:
    type: boolean
    default: true
    description: >
      Checkout as a first step? Default is true

  pipeline-param-map:
    type: string
    default: "{\\\"run-integration-tests\\\": true, \\\"dev-orb-version\\\": \\\"dev:${CIRCLE_SHA1:0:7}\\\"}"
    description: >
      Map of pipeline parameters that the new pipeline will be invoked with.
      Make use of this to target the integration workflow that should be triggered
      and exclude other workflows from being triggered.

  token-variable:
    type: env_var_name
    default: CIRCLE_TOKEN
    description: >
      Name of environment variable containing your personal CircleCI API token

steps:
  - when:
      condition: <<parameters.checkout>>
      steps:
        - checkout

  - jq/install

  - run:
      name: Trigger integration test workflow
      command: |
        VCS_TYPE=$(echo "${CIRCLE_BUILD_URL}" | cut -d '/' -f 4)
        curl -u "${<<parameters.token-variable>>}": -X POST --header "Content-Type: application/json" -d "{
            \"branch\": \"${CIRCLE_BRANCH}\",
            \"parameters\": <<parameters.pipeline-param-map>>
        }" "https://circleci.com/api/v2/project/${VCS_TYPE}/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pipeline" -o /tmp/curl-result.txt
        CURL_RESULT=$(cat /tmp/curl-result.txt)

        if [[ $(echo "$CURL_RESULT" | jq -r .message) == "Not Found" || $(echo "$CURL_RESULT" | jq -r .message) == "Permission denied" || $(echo "$CURL_RESULT" | jq -r .message) == "Project not found" ]]; then
            echo "Was unable to trigger integration test workflow. API response: $(cat /tmp/curl-result.txt | jq -r .message)"
            exit 1
        else
            echo "Pipeline triggered!"
            echo "https://app.circleci.com/jobs/${VCS_TYPE}/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/$(cat /tmp/curl-result.txt | jq -r .number)"
        fi
